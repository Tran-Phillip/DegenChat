{"version":3,"sources":["images/logo_black_white.png","components/TransitionButton/TransitionButton.tsx","components/LoginView/LoginView.tsx","components/TransitionTextInput/TransitionTextInput.tsx","components/RegisterView/RegisterView.tsx","components/UserPanel/UserPanel.tsx","components/RoomPanel/RoomPanel.tsx","components/RoomView/RoomView.tsx","components/UserHomePage/UserHomePage.tsx","components/SigninComponent/SigninComponent.tsx","components/LoginComponentRouter/LoginComponentRouter.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ButtonTheme","createMuiTheme","overrides","MuiButton","root","margin","padding","palette","primary","light","main","dark","contrastText","secondary","typography","TransitionButton","props","state","clicked","this","setState","undefined","onClick","listen","theme","reverse","triggerOnce","duration","Button","size","variant","color","text","delay","bind","React","Component","LoginView","choiceSelected","Promise","r","setTimeout","RedirectTo","className","src","Logo","login","register","TransitionTextInput","TextField","id","label","onChange","TextFieldTheme","MuiTextField","RegisterView","username","password","choiceMade","validEntry","event","target","value","event2","console","log","fetch","response","json","jsonResponse","Object","keys","length","method","body","JSON","stringify","Username","Password","ID","updateUsername","updatePassword","submit","cancel","UserPanel","rooms","roomName","window","prompt","Name","UsersInRoom","socket","WebSocket","onopen","onmessage","msg","jsonMsg","parse","data","type","displayRooms","appendMessage","updateParent","addSocket","addRoom","createNewRoom","joinRoom","RoomPanel","RoomName","users","map","user","Card","style","backgroundColor","CardContent","Grid","container","direction","alignItems","justify","Typography","RoomView","key","addMessage","shownMessages","messages","onKeyPress","onKeyPressed","UserHomePage","UserRooms","Routes","Messages","sockets","CurrentRoom","then","result","jsonData","i","push","onclose","message","room","send","InRoom","to","path","render","defaultView","redirectTo","SignInComponent","SetUser","LoginComponentRouter","currentUser","_redirectTo","setRedirect","setUser","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.fafc3847.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_black_white.72e114df.png\";","import React from \"react\"\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\n\n\nimport \"./TransitionButton.scss\";\nimport { Slide, Fade } from \"react-awesome-reveal\";\n// UI Material Button that plays an animation and transitions out on click\n\n\nconst ButtonTheme = createMuiTheme({\n    overrides: {\n        MuiButton: {\n            root: {\n                margin: \"10px\",\n                padding: \"10px\"\n            }\n        }\n    },\n    palette: {\n        primary: {\n        light: '#757ce8',\n        main: '#7FC5F8',\n        dark: '#6FB6EA',\n        contrastText: '#000',\n        },\n        secondary: {\n        light: '#ff7961',\n        main: '#F87F7F',\n        dark: '#E86A6A',\n        contrastText: '#000',\n        },\n    },\n    typography: {\n        \"fontFamily\": `\"Quicksand\", sans-serif`,\n        \"fontSize\": 20,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 300,\n    },\n});\n\ntype TransitionButtonProps = {\n    color: \"primary\" | \"secondary\"\n    text: string\n    onClick?: Function\n    listen? : boolean // determines whether or not to 'listen' to a state variable in the parent\n                      // if listen becomes true (the parent's state variable becoming true), then it will signal\n                      // all transition buttons to play their transition.\n}\n\ntype TransitionButtonState = {\n    clicked: boolean\n}\n\nclass TransitionButton extends React.Component<TransitionButtonProps, TransitionButtonState> {\n\n    constructor(props: any){\n        super(props);\n        this.state = {\n            clicked: false\n        }\n    }\n\n\n    onClick() {\n        this.setState({\n            clicked: true\n        })\n        if(this.props.onClick != undefined){\n            this.props.onClick()\n        }\n    }\n\n    render() {\n\n        if(this.state.clicked || this.props.listen) {\n            return ( // slide transition the button out\n                <MuiThemeProvider theme={ButtonTheme}>\n                    <Slide reverse={true} triggerOnce={true} duration={500}>\n                        <Fade reverse={true} triggerOnce={true} duration={500}>\n                            <Button size=\"large\" variant=\"contained\" color={this.props.color}>  {this.props.text}  </Button>\n                        </Fade>\n                    </Slide>\n                </MuiThemeProvider>\n            )\n        }\n        else {\n            return (\n                <MuiThemeProvider theme={ButtonTheme}>\n                    <Slide triggerOnce={true} delay={200}>\n                        <Fade triggerOnce={true}>\n                            <Button onClick={this.onClick.bind(this)} size=\"large\" variant=\"contained\" color={this.props.color}>  {this.props.text}  </Button>\n                        </Fade>\n                    </Slide>\n                </MuiThemeProvider>\n            )\n        }\n    }\n}\n\nexport default TransitionButton","import React from \"react\"\nimport { Fade } from \"react-awesome-reveal\"\nimport TransitionButton from \"../TransitionButton/TransitionButton\"\nimport Logo from \"../../images/logo_black_white.png\";\n\nimport \"./LoginView.scss\";\n\n\ntype LoginViewProps = {\n    RedirectTo: Function\n}\n\ntype LoginViewState = {\n    choiceSelected: boolean\n}\n\nclass LoginView extends React.Component<LoginViewProps, LoginViewState> {\n    \n    constructor(props:any){\n        super(props);\n        this.state = {\n            choiceSelected: false\n        }\n    }\n    async login() {\n        this.setState({\n            choiceSelected: true\n        })\n\n        await new Promise(r => setTimeout(r, 500)); // wait for our animation to finish\n        this.props.RedirectTo(\"/login\")\n    }\n\n    async register() {\n        this.setState({\n            choiceSelected: true \n        })\n        await new Promise(r => setTimeout(r, 500)); // wait for our animation to finish\n        this.props.RedirectTo(\"/register\");\n    }\n\n    render() {\n        return (\n                <div className=\"LoginComponent\">\n                    <img className=\"LoginPageLogo\" src={Logo} />\n                <Fade delay={300}>\n\n                    <TransitionButton color={\"primary\"} text=\"Login\" onClick={this.login.bind(this)} listen={this.state.choiceSelected} />\n                    <TransitionButton color={\"secondary\"} text=\"Register\" onClick={this.register.bind(this)} listen={this.state.choiceSelected}/>\n                </Fade>\n\n                </div>\n        )\n    }\n}\n\nexport default LoginView","import React from \"react\"\nimport { TextField, createMuiTheme, MuiThemeProvider  } from '@material-ui/core';\nimport { Slide, Fade } from \"react-awesome-reveal\";\n\n// Text input field that displays animation when clicked\n\ntype TransitionTextInputProps = {\n    text: string\n    onChange: Function\n    listen?: boolean \n}\n\ntype TransitionTextInputState = {\n    \n}\n\nclass TransitionTextInput extends React.Component<TransitionTextInputProps, TransitionTextInputState>{\n    text: string \n    constructor(props:any){\n        super(props)\n        this.text = \"\"\n        \n    }\n\n    render() {\n        if(this.props.listen) {\n            return(\n                <Slide reverse={true}  triggerOnce={true} duration={500}>\n                    <Fade reverse={true} triggerOnce={true} duration={500}>\n                        <TextField color=\"primary\" id=\"outlined-basic\" label={this.props.text} variant=\"outlined\" onChange={this.props.onChange.bind(this)}/>\n                    </Fade>\n                </Slide>\n            )\n        }\n        else {\n            return(\n                <Slide  triggerOnce={true}>\n                    <Fade triggerOnce={true}>\n                        <TextField color=\"primary\" id=\"outlined-basic\" label={this.props.text} variant=\"outlined\" onChange={this.props.onChange.bind(this)}/>\n                    </Fade>\n                </Slide>\n            )\n        }\n    }\n}\n\nexport default TransitionTextInput","import React from \"react\"\nimport Logo from \"../../images/logo_black_white.png\";\nimport { TextField, createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport TransitionButton from \"../TransitionButton/TransitionButton\"\nimport TransitionTextInput from \"../TransitionTextInput/TransitionTextInput\"\nimport \"./RegisterView.scss\"\nimport { Slide, Fade } from \"react-awesome-reveal\";\nimport { Redirect } from \"react-router-dom\";\n\nconst TextFieldTheme = createMuiTheme({\n    overrides: {\n        MuiTextField: {\n            root: {\n                margin: \"5px\",\n                padding: \"5px\"\n            }\n        }\n    },\n    palette: {\n        primary: {\n        light: '#757ce8',\n        main: '#7FC5F8',\n        dark: '#6FB6EA',\n        contrastText: '#000',\n        },\n        secondary: {\n        light: '#ff7961',\n        main: '#F87F7F',\n        dark: '#E86A6A',\n        contrastText: '#000',\n        },\n    },\n    typography: {\n        \"fontFamily\": `\"Quicksand\", sans-serif`,\n        \"fontSize\": 20,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 300,\n    },\n});\n\ntype RegisterViewProps = {\n    RedirectTo: Function\n}\n\ntype RegisterViewState = {\n    choiceMade: boolean\n    validEntry: boolean | undefined\n}\n\n\nclass RegisterView extends React.Component<RegisterViewProps, RegisterViewState> {\n    \n    username: string \n    password: string \n\n    constructor(props:any){\n        super(props);\n        this.username = \"\"\n        this.password = \"\"\n\n        this.state = {\n            choiceMade:false,\n            validEntry: undefined\n        }\n    }  \n\n    updateUsername(event:any){\n        this.username = event.target.value \n    } \n\n    updatePassword(event2:any){\n        this.password = event2.target.value\n    }\n\n    async submit(){\n        this.setState({\n            choiceMade: true\n        })\n        console.log(this.username + \" | \" + this.password )\n        let response = await fetch(\"http://localhost:8080/api/v1/Users/\"+this.username)\n        let jsonResponse = await response.json()\n\n        if(Object.keys(jsonResponse).length === 0){\n            console.log(jsonResponse)\n            console.log(\"ok\")\n            \n            // POST our user \n            await fetch(\"http://localhost:8080/api/v1/PostUsers\", {\n                method: 'POST',\n                body: JSON.stringify({Username: this.username, Password: this.password, ID: 0})\n            })\n\n            this.setState({\n                validEntry: true,\n                choiceMade: true\n            })\n            await new Promise(r => setTimeout(r, 2000)); // wait for our animation to finish\n            this.props.RedirectTo(\"/\")\n\n            \n        }\n        else {\n            this.setState({\n                validEntry: false,\n                choiceMade: false\n            })\n        }\n\n    }\n\n    async cancel(){\n        this.setState({\n            choiceMade: true\n        })\n        await new Promise(r => setTimeout(r, 500)); // wait for our animation to finish\n        this.props.RedirectTo(\"/\")\n    }\n    \n    render() {\n\n        if(this.state.validEntry != undefined && !this.state.validEntry){\n            return (\n                <MuiThemeProvider theme={TextFieldTheme}>\n                <div className=\"RegisterView\">\n                    <img className=\"LoginPageLogo\" src={Logo} />\n                    <p>Username is already taken. Please try again</p>\n                    <TransitionTextInput text=\"Username\" onChange={this.updateUsername.bind(this)} listen={this.state.choiceMade} />\n                    <TransitionTextInput text=\"Password\" onChange={this.updatePassword.bind(this)} listen={this.state.choiceMade} />\n                    <TransitionButton color=\"primary\" text = \"Submit\" onClick={this.submit.bind(this)} listen={this.state.choiceMade}/>\n                    <TransitionButton color=\"secondary\" text = \"Cancel\" onClick={this.cancel.bind(this)} listen={this.state.choiceMade}/>\n                </div>\n                </MuiThemeProvider>\n            )\n        }\n        else if(this.state.validEntry != undefined && this.state.validEntry){\n            return (\n            <MuiThemeProvider theme={TextFieldTheme}>\n                <div className=\"RegisterView\">\n                    <img className=\"LoginPageLogo\" src={Logo} />\n                    <p>Account Successfully Created!</p>\n                </div>\n            </MuiThemeProvider>\n            )\n        }\n        return(\n            <MuiThemeProvider theme={TextFieldTheme}>\n                <div className=\"RegisterView\">\n                    <img className=\"LoginPageLogo\" src={Logo} />\n                    <TransitionTextInput text=\"Username\" onChange={this.updateUsername.bind(this)} listen={this.state.choiceMade} />\n                    <TransitionTextInput text=\"Password\" onChange={this.updatePassword.bind(this)} listen={this.state.choiceMade} />\n                    <TransitionButton color=\"primary\" text = \"Submit\" onClick={this.submit.bind(this)} listen={this.state.choiceMade}/>\n                    <TransitionButton color=\"secondary\" text = \"Cancel\" onClick={this.cancel.bind(this)} listen={this.state.choiceMade}/>\n                </div>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nexport default RegisterView;","import React from \"react\"\nimport \"./UserPanel.scss\"\nimport Logo from \"../../images/logo_black_white.png\"\nimport { Button, MuiThemeProvider, createMuiTheme } from \"@material-ui/core\"\n\nconst ButtonTheme = createMuiTheme({\n    overrides: {\n        MuiButton: {\n            root: {\n                margin: \"10px\",\n                padding: \"10px\"\n            }\n        }\n    },\n    palette: {\n        primary: {\n        light: '#757ce8',\n        main: '#7FC5F8',\n        dark: '#6FB6EA',\n        contrastText: '#000',\n        },\n        secondary: {\n        light: '#ff7961',\n        main: '#F87F7F',\n        dark: '#E86A6A',\n        contrastText: '#000',\n        },\n    },\n    typography: {\n        \"fontFamily\": `\"Quicksand\", sans-serif`,\n        \"fontSize\": 20,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 300,\n    },\n});\n\n\ntype UserPanelProps = {\n    username: string,\n    addRoom: Function,\n    displayRooms: Function\n    appendMessage: Function\n    updateParent: Function\n    addSocket: Function\n}\n\ntype UserPanelState = {\n    rooms: Array<any>\n}\n\n\nclass UserPanel extends React.Component<UserPanelProps, UserPanelState>{\n\n    constructor(props:any){\n        super(props);\n        this.state = {\n            rooms: []\n        }\n    }\n\n    async createNewRoom() {\n        let roomName = window.prompt(\"room Name: \");\n        await fetch(\"http://localhost:8080/api/v1/PostRoom\", {\n                method: 'POST',\n                body: JSON.stringify({Name: roomName, UsersInRoom: [this.props.username]})\n        })\n        let socket = new WebSocket(\"ws://localhost:8080/api/v1/OpenWS/\" + roomName)\n            socket.onopen = () =>{\n                console.log(\"Socket connected: \")\n            }\n            socket.onmessage = (msg) => {\n                console.log(\"Msg got: \", msg)\n                let jsonMsg =JSON.parse(msg.data)\n                if(jsonMsg.type == 1){\n                    this.props.displayRooms()\n                }\n                else if(jsonMsg.type == 2){\n                    this.props.appendMessage(jsonMsg.body)\n                    this.props.updateParent()\n                }\n            }\n\n        this.props.addSocket(roomName, socket)\n        this.props.addRoom(roomName)\n    }\n\n    async joinRoom(){\n        let roomName = window.prompt(\"Room To Join: \");\n        await fetch(\"http://localhost:8080/api/v1/Join/\"+roomName +\"/\" +this.props.username)\n        let socket = new WebSocket(\"ws://localhost:8080/api/v1/OpenWS/\" + roomName)\n            socket.onopen = () =>{\n                console.log(\"Socket connected: \")\n            }\n            socket.onmessage = (msg) => {\n                console.log(\"Msg got: \", msg)\n                let jsonMsg =JSON.parse(msg.data)\n                if(jsonMsg.type == 1){\n                    this.props.displayRooms()\n                }\n                else if(jsonMsg.type == 2){\n                    this.props.appendMessage(jsonMsg.body)\n                    this.props.updateParent()\n                }\n            }\n\n        this.props.addSocket(roomName, socket)\n        this.props.addRoom(roomName)\n        this.props.addRoom(\"\")\n    }\n\n    render(){\n        return(\n            <div className=\"UserPanel\">\n                <div className=\"Panel\">\n                    <div className=\"IconNameContainer\">\n                        <img className=\"UserPanelLogo\" src={Logo}></img>\n                        <div className=\"UsernameDisplay\">\n                            <h1>{this.props.username}</h1>\n                        </div>\n                    </div>\n                    <div className=\"FriendsOnline\">\n                        \n                    </div>\n                    <MuiThemeProvider theme={ButtonTheme}>\n                        <Button color=\"primary\" variant=\"contained\" onClick={this.createNewRoom.bind(this)} > New Room </Button>\n                        <Button color=\"primary\" variant=\"contained\" onClick={this.joinRoom.bind(this)} > Join Room </Button>\n                    </MuiThemeProvider>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserPanel","import React from \"react\"\nimport { Card, makeStyles, CardContent, Typography, MuiThemeProvider, createMuiTheme, Grid, Button } from \"@material-ui/core\"\nimport \"./RoomPanel.scss\"\n\nconst ButtonTheme = createMuiTheme({\n    overrides: {\n        MuiButton: {\n            root: {\n                margin: \"10px\",\n                padding: \"10px\"\n            }\n        },\n    },\n    palette: {\n        primary: {\n        light: '#757ce8',\n        main: '#FFFFFF',\n        dark: '#6FB6EA',\n        contrastText: '#000',\n        },\n        secondary: {\n        light: '#ff7961',\n        main: '#F87F7F',\n        dark: '#E86A6A',\n        contrastText: '#000',\n        },\n    },\n    typography: {\n        \"fontFamily\": `\"Quicksand\", sans-serif`,\n        \"fontSize\": 20,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 300,\n    },\n});\n\ntype RoomPanelProps = {\n    RoomName : string\n    UsersInRoom: Array<string>\n    RedirectTo: Function\n}\n\ntype RoomPanelState = {\n\n}\n\nclass RoomPanel extends React.Component<RoomPanelProps, RoomPanelState>{\n\n    onClick() {\n        this.props.RedirectTo(this.props.RoomName)\n    }\n\n    render(){\n        const users = this.props.UsersInRoom.map( (user) => <p>• {user}</p>)\n\n        return (\n            <MuiThemeProvider theme={ButtonTheme}>\n            <a>\n                <Card className=\"RoomCard\" color=\"primary\" style={{backgroundColor:'#F87F7F'}}>\n                    <CardContent>\n                            <Grid\n                                container \n                                direction=\"column\"\n                                alignItems=\"center\"\n                                justify=\"center\">\n                                <Button color=\"primary\" variant=\"contained\" className =\"RoomNameBar\" size=\"small\" onClick={this.onClick.bind(this)}>\n                                    {this.props.RoomName}\n                                </Button>\n                                \n                            </Grid>\n                        <Card className=\"PeopleInRoomContainer\">\n                            <CardContent>\n                                <Typography>\n                                    {users}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </CardContent>\n                </Card>\n            </a>\n\n            \n            </MuiThemeProvider>\n        )\n    }\n}\n\nexport default RoomPanel","import React from \"react\" \n\n\ntype RoomViewProps = {\n    roomName: string\n    messages: Array<any>\n    addMessage: Function\n}\n\ntype RoomViewState = {\n\n}\n\nclass RoomView extends React.Component<RoomViewProps, RoomViewState> {\n\n    componentDidMount(){\n\n    }\n\n    onKeyPressed(event : any){\n        if(event.key == \"Enter\") { \n            console.log(\"Message recieved\")\n            this.props.addMessage(event.target.value, this.props.roomName)\n            event.target.value = \"\"\n        }\n    }\n\n    render() {\n        let shownMessages = this.props.messages.map( (msg) => <p> {msg} </p> )\n        return( \n            <div className=\"RoomView\">\n                {shownMessages}\n                <input onKeyPress={this.onKeyPressed.bind(this)} />\n            </div>\n        )\n    }\n\n}\n\nexport default RoomView","import React from \"react\"\nimport UserPanel from \"../UserPanel/UserPanel\"\nimport RoomPanel from \"../RoomPanel/RoomPanel\"\nimport RoomView from \"../RoomView/RoomView\"\n\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from \"react-router-dom\";\n\nimport \"./UserHomePage.scss\"\nimport { Socket } from \"dgram\";\n\ntype UserHomePageProps = {\n    username: string\n}\n\ntype UserHomePageState = {\n    CurrentRoom: string\n}\n\n\nclass UserHomePage extends React.Component<UserHomePageProps, UserHomePageState>{\n    UserRooms:Array<any>\n    Routes: Array<any>\n    Messages: Array<any>\n    sockets: any\n    constructor(props:any){\n        console.log(\"called\")\n        super(props);\n        this.UserRooms = []\n        this.Routes = []\n        this.Messages = []\n        this.sockets = {}\n        this.state = {\n            CurrentRoom: \"/\"\n        }\n        \n    }\n\n    componentDidMount(){\n        console.log(\"Mounting\")\n        fetch(\"http://localhost:8080/api/v1/Rooms/\"+this.props.username)\n        .then( (result) => result.json())\n        .then( (jsonData) => {\n            for(var i = 0; i < jsonData.length; i++){\n                let socket = new WebSocket(\"ws://localhost:8080/api/v1/OpenWS/\" + jsonData[i][\"Name\"])\n                socket.onopen = () =>{\n                    console.log(\"Socket connected: \")\n                }\n                socket.onmessage = (msg) => {\n                    console.log(\"Msg got: \", msg)\n                    let jsonMsg =JSON.parse(msg.data)\n                    if(jsonMsg.type == 1){\n                        this.displayRooms()\n                    }\n                    else if(jsonMsg.type == 2){\n                        console.log(\"Got chat message\", jsonMsg.body)\n                        this.Messages.push(jsonMsg.body)\n                        this.setState({})\n                    }\n                }\n                socket.onclose = () => {\n                    console.log(\"Closing the socket\")\n                }\n                this.sockets[jsonData[i][\"Name\"]] = socket\n            }\n\n        })\n        this.displayRooms()\n    }\n\n    componentWillUnmount() {\n        console.log(\"Unmounting\")\n    }\n\n    addMessage(message: string, room: string) {\n        this.sockets[room].send(message)\n        \n    }\n\n    appendMessage(message: string){\n        this.Messages.push(message)\n    }\n\n    displayRooms() {\n        fetch(\"http://localhost:8080/api/v1/Rooms/\"+this.props.username)\n        .then( (result) => result.json())\n        .then( (jsonData) => {\n            for(var i = 0; i < jsonData.length; i++){\n                console.log(jsonData[i][\"UsersInRoom\"])\n                this.UserRooms.push({Name: jsonData[i][\"Name\"], InRoom: jsonData[i][\"UsersInRoom\"]})\n            }\n            this.setState({})\n        })\n    }\n\n    addRoom(room: any){\n        fetch(\"http://localhost:8080/api/v1/Rooms/\"+this.props.username)\n        .then( (result) => result.json())\n        .then( (jsonData) => {\n            for(var i = 0; i < jsonData.length; i++){\n                console.log(jsonData[i][\"UsersInRoom\"])\n\n                this.UserRooms.push({Name: jsonData[i][\"Name\"], InRoom: jsonData[i][\"UsersInRoom\"]})\n            }\n            this.setState({})\n        })\n    }\n\n    addSocket(room: string, socket: any) {\n        this.sockets[room] = socket\n    }\n\n\n    redirectTo(to:string){\n        this.setState({CurrentRoom:\"/rooms/\"+to})\n        this.Messages = []\n    }\n\n    updateParent(){\n        this.setState({})\n    }\n\n    render(){\n        console.log(\"DIR: \" , this.state.CurrentRoom)\n        console.log(\"MSG: \", this.Messages)\n        return (\n            <Router>\n                <Switch>\n                    {this.Routes}\n                    <Route path=\"/\" render={this.defaultView.bind(this)}/>\n                </Switch>\n                <Redirect to={this.state.CurrentRoom}/>\n            </Router>\n        )\n    }\n\n\n\n    defaultView(){\n        console.log(\"DefaultView\")\n        if(this.state.CurrentRoom != \"/\"){\n            return\n        }\n        let rooms = this.UserRooms.map(room => <RoomPanel RoomName={room.Name} UsersInRoom={room.InRoom} RedirectTo={this.redirectTo.bind(this)}/> );\n        this.Routes = this.UserRooms.map(room => <Route path={\"/rooms/\"+room.Name} render = {( ) => <RoomView roomName={room.Name} messages={this.Messages} addMessage={this.addMessage.bind(this)} />  } /> );\n\n        console.log(rooms, this.UserRooms)\n        this.UserRooms = []\n        return(\n            <div className=\"Container\">\n            <div className=\"UserHomePage\">\n                {rooms}\n            </div>\n            <UserPanel username = {this.props.username} addRoom={this.addRoom.bind(this)} displayRooms={this.displayRooms.bind(this)} appendMessage={this.appendMessage.bind(this)} updateParent={this.updateParent.bind(this)} addSocket={this.addSocket.bind(this)} />\n        </div>\n        )\n    }\n}\n\nexport default UserHomePage","import React from \"react\"\nimport Logo from \"../../images/logo_black_white.png\";\nimport { TextField, createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport TransitionButton from \"../TransitionButton/TransitionButton\"\nimport TransitionTextInput from \"../TransitionTextInput/TransitionTextInput\"\nimport \"./SigninComponent.scss\"\nimport { Slide, Fade } from \"react-awesome-reveal\";\nimport { Redirect } from \"react-router-dom\";\n\n// TODO: Combine with RegisterView\n\nconst TextFieldTheme = createMuiTheme({\n    overrides: {\n        MuiTextField: {\n            root: {\n                margin: \"5px\",\n                padding: \"5px\"\n            }\n        }\n    },\n    palette: {\n        primary: {\n        light: '#757ce8',\n        main: '#7FC5F8',\n        dark: '#6FB6EA',\n        contrastText: '#000',\n        },\n        secondary: {\n        light: '#ff7961',\n        main: '#F87F7F',\n        dark: '#E86A6A',\n        contrastText: '#000',\n        },\n    },\n    typography: {\n        \"fontFamily\": `\"Quicksand\", sans-serif`,\n        \"fontSize\": 20,\n        \"fontWeightLight\": 300,\n        \"fontWeightRegular\": 300,\n    },\n});\n\ntype SignInComponentProps = {\n    RedirectTo: Function\n    SetUser: Function\n}\n\ntype SignInComponentState = {\n    choiceMade: boolean\n    validEntry: boolean | undefined\n}\n\n\nclass SignInComponent extends React.Component<SignInComponentProps, SignInComponentState> {\n    \n    username: string \n    password: string \n\n    constructor(props:any){\n        super(props);\n        this.username = \"\"\n        this.password = \"\"\n\n        this.state = {\n            choiceMade:false,\n            validEntry: undefined\n        }\n    }  \n\n    updateUsername(event:any){\n        this.username = event.target.value \n    } \n\n    updatePassword(event2:any){\n        this.password = event2.target.value\n    }\n\n    async submit(){\n        this.setState({\n            choiceMade: true\n        })\n        console.log(this.username + \" | \" + this.password )\n        let response = await fetch(\"http://localhost:8080/api/v1/Users/\"+this.username)\n        let jsonResponse = await response.json()\n\n        if(Object.keys(jsonResponse).length === 0){ // not in system\n            this.setState({\n                validEntry: false,\n                choiceMade: false\n            })\n        }\n        else {\n\n            if(jsonResponse.Password != this.password){ // incorrect password\n                this.setState({\n                    validEntry: false,\n                    choiceMade: false\n                })\n            }\n            else {\n                \n                this.props.SetUser(this.username)\n                this.setState({\n                    choiceMade: true\n                })\n                await new Promise(r => setTimeout(r, 500)); // wait for our animation to finish\n                this.setState({\n                    validEntry: true\n                })\n                await new Promise(r => setTimeout(r, 500)); // wait for our animation to finish\n                this.props.RedirectTo(\"/homepage\")\n            }\n           \n        }\n\n    }\n\n    async cancel(){\n        this.setState({\n            choiceMade: true\n        })\n        await new Promise(r => setTimeout(r, 500)); // wait for our animation to finish\n        this.props.RedirectTo(\"/\")\n    }\n    \n    render() {\n\n        if(this.state.validEntry != undefined && !this.state.validEntry){\n            return (\n                <MuiThemeProvider theme={TextFieldTheme}>\n                <div className=\"SignInComponent\">\n                    <img className=\"LoginPageLogo\" src={Logo} />\n                    <p>Login credentials do not match any in our system. Please try again.</p>\n                    <TransitionTextInput text=\"Username\" onChange={this.updateUsername.bind(this)} listen={this.state.choiceMade} />\n                    <TransitionTextInput text=\"Password\" onChange={this.updatePassword.bind(this)} listen={this.state.choiceMade} />\n                    <TransitionButton color=\"primary\" text = \"Submit\" onClick={this.submit.bind(this)} listen={this.state.choiceMade}/>\n                    <TransitionButton color=\"secondary\" text = \"Cancel\" onClick={this.cancel.bind(this)} listen={this.state.choiceMade}/>\n                </div>\n                </MuiThemeProvider>\n            )\n        }\n        else if(this.state.validEntry != undefined && this.state.validEntry){\n            return (\n            <MuiThemeProvider theme={TextFieldTheme}>\n                <div className=\"SignInComponent\">\n                    <img className=\"LoginPageLogo\" src={Logo} />\n                    <p>Success!</p>\n                </div>\n            </MuiThemeProvider>\n            )\n        }\n        return(\n            <MuiThemeProvider theme={TextFieldTheme}>\n                <div className=\"SignInComponent\">\n                    <img className=\"LoginPageLogo\" src={Logo} />\n                    <TransitionTextInput text=\"Username\" onChange={this.updateUsername.bind(this)} listen={this.state.choiceMade} />\n                    <TransitionTextInput text=\"Password\" onChange={this.updatePassword.bind(this)} listen={this.state.choiceMade} />\n                    <TransitionButton color=\"primary\" text = \"Submit\" onClick={this.submit.bind(this)} listen={this.state.choiceMade}/>\n                    <TransitionButton color=\"secondary\" text = \"Cancel\" onClick={this.cancel.bind(this)} listen={this.state.choiceMade}/>\n                </div>\n            </MuiThemeProvider>\n        )\n    }\n}\n\nexport default SignInComponent;","import React from \"react\";\nimport LoginView from \"../LoginView/LoginView\";\nimport RegisterView from \"../RegisterView/RegisterView\"\nimport SigninComponent from \"../SigninComponent/SigninComponent\"\nimport UserHomePage from \"../UserHomePage/UserHomePage\"\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from \"react-router-dom\";\n\nimport \"./LoginComponentRouter.scss\";\nimport SignInComponent from \"../SigninComponent/SigninComponent\";\n/*\n This will handle the routing for the Login Components\n\n  | - LoginComponent\n  | - RegisterView\n  | - LoginView \n\n*/\ntype LoginCompnentRouterProps = {\n\n}\n\ntype LoginComponentRouterState = {\n    redirectTo: string\n    currentUser: string\n}\n\n\n\nclass LoginComponentRouter extends React.Component<LoginCompnentRouterProps, LoginComponentRouterState> {\n    \n    rooms:Array<string>\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            redirectTo: \"/\",\n            currentUser: \"\"\n        }\n        this.rooms = []\n    }\n\n    setRedirect(_redirectTo: string){\n        this.setState({\n            redirectTo: _redirectTo\n        })\n    }\n\n    setUser(user: string){\n        this.setState({\n            currentUser: user\n        })\n    }\n\n\n    render() {\n\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/homepage\" render={(props:any) => <UserHomePage {...props} username={this.state.currentUser} /> }/>\n                    <Route path=\"/login\" render={(props:any) => <SignInComponent {...props} RedirectTo={this.setRedirect.bind(this)} SetUser={this.setUser.bind(this)} />}/>\n                    <Route path=\"/register\" render={(props:any) => <RegisterView {...props} RedirectTo={this.setRedirect.bind(this)}/>}/>\n                    <Route path= \"/\" render={() => <LoginView RedirectTo={this.setRedirect.bind(this)}/>}/>\n                </Switch>\n                <Redirect to={this.state.redirectTo}/>\n            </Router>\n        )\n    }\n\n}\n\nexport default LoginComponentRouter\n\n","import React from 'react';\nimport LoginComponentRouter from \"./components/LoginComponentRouter/LoginComponentRouter\"\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LoginComponentRouter/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}